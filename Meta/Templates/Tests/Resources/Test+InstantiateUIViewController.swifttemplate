<%- include("../../Common/Common") -%>

<% // <#Processed Types#>

func getTypesToBeProcessed() -> [Type]
{
    return types.classes
                .filter
                {
                    ($0.inheritedTypes.contains("UIViewController") || $0.inheritedTypes.contains("UITabBarController")) &&
                    !$0.isGeneric &&
                    $0.implements["StoryboardInstantitable"] != nil
                }
                .sorted(by: { $0.name < $1.name })
}

-%>

<% // <#Test Methods#>

func generateTestMethod(_ type: Type) -> String
{
    return """
func test\(type.name)()
{
    XCTAssertTrue(canBeInstantiated(\(type.name).self))
}
"""
}

-%>

<% // <#Test Methods#>

func generateTestMethods() -> String
{
    return getTypesToBeProcessed()
                .map(generateTestMethod)
                .map(tabulate(1))
                .joined(separator: "\n\n")
}

-%>

<% // <#Output#>

func generateOutput() -> String
{
    return """
import XCTest
@testable import \(projectName)

class InstantiateUIViewControllerTests: XCTestCase
{
    private func canBeInstantiated<ViewController: StoryboardInstantitable>(_ viewControllerType: ViewController.Type) -> Bool
    {
        return UIViewController.instantiate(storyBoardName:   ViewController.storyboardName.fileName,
                                            viewControllerId: String(describing: ViewController.self)) is ViewController
    }

\(generateTestMethods())
}
"""
}

-%>

// sourcery:file:../../Tests/Resources/InstantiateUIViewControllerTests.swift

<%= generateOutput() %>

// sourcery:end
